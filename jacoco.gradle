apply plugin: 'jacoco'

jacoco {
  toolVersion = "$jacocoVersion"
}

tasks.withType(Test) {
  jacoco.includeNoLocationClasses = true
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest']) {

  reports {
    xml.enabled = true
    html.enabled = true
  }

  def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
  def debugKotlinTree = fileTree(dir: "$project.buildDir/tmp/kotlin-classes/debug", excludes: fileFilter)   // kotlin classes
  def debugJavaTree = fileTree(dir: "$project.buildDir/intermediates/javac/debug", excludes: fileFilter)   // java classes
  def mainSrc = "$project.projectDir/src/main/java"


  additionalSourceDirs.setFrom(files([mainSrc]))    // for kotlin
  sourceDirectories.setFrom(files([mainSrc]))
  classDirectories.setFrom(files([debugKotlinTree, debugJavaTree]))
  executionData.setFrom(fileTree(dir: project.buildDir, includes: [
          'jacoco/testDebugUnitTest.exec', 'outputs/code_coverage/debugAndroidTest/connected/**/*.ec'
  ]))
}
